# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: install
    
    jobs:
      - job: install
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '10.x'
          displayName: 'Setup Environment'

        - script: npm install
          displayName: 'Install Dependencies'
          workingDirectory: ./yourepic

        - script: npx ng build --prod
          displayName: 'Build'
          workingDirectory: ./yourepic
        
        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: 'yourepic/dist/yourepic'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            replaceExistingArchive: true
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
      
      - job: test
        steps:
        
        - task: NodeTool@0
          inputs:
            versionSpec: '10.x'
          displayName: 'Setup Environment'

        - script: npm install
          displayName: 'Install Dependencies'
          workingDirectory: ./yourepic
        - task: DeleteFiles@1
          displayName: 'Delete JUnit files'
          inputs:
            SourceFolder: yourepic/junit
            Contents: 'TESTS*.xml'
        - task: SonarCloudPrepare@1
          inputs:
            SonarCloud: 'SonarCloud'
            organization: '2011-nov02-net'
            scannerMode: 'MSBuild'
            projectKey: '2011-nov02-net_yourepic-project2'
            projectName: 'YourEpic'

        - script: npm run test -- --watch=false --code-coverage
          displayName: 'Tests'
          workingDirectory: './yourepic'
        - task: PublishCodeCoverageResults@1
          displayName: 'Publish code coverage Angular results'
          condition: succeededOrFailed()
          inputs:
            codeCoverageTool: 'Cobertura'
            summaryFileLocation: './yourepic/coverage/*.xml'
            reportDirectory: './yourepic/coverage'
            failIfCoverageEmpty: true

        - task: PublishTestResults@2
          displayName: 'Publish Angular test results'
          condition: succeededOrFailed()
          inputs:
            searchFolder: $(System.DefaultWorkingDirectory)/yourepic/junit
            testRunTitle: Angular
            testResultsFormat: JUnit
            testResultsFiles: "**/TESTS*.xml"
        - task: SonarCloudAnalyze@1
        - task: SonarCloudPublish@1
          inputs:
            pollingTimeoutSec: '300'

  - stage: release
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - deployment: app_service
        environment: prod
        strategy:
          runOnce:
            deploy:
              steps:
              - download: current
                artifact: 'drop'
                displayName: download app
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'Mendez Azure Subscription(e651ad7e-a3af-4e5b-9734-05a198120bd7)'
                  appType: 'webApp'
                  WebAppName: 'YourEpic'
                  packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'